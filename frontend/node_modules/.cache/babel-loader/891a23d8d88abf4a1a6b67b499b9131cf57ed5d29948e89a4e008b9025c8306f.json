{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// Define a service using a base URL and expected endpoints\nexport const productsApi = createApi({\n  reducerPath: \"productsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3000/\"\n  }),\n  endpoints: builder => ({\n    getAllProducts: builder.query({\n      query: () => `products`\n    })\n  })\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetAllProductsQuery\n} = productsApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","productsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getAllProducts","query","useGetAllProductsQuery"],"sources":["D:/Escritorio/api-ecommerce-sustantiva/frontend/src/features/productsApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const productsApi = createApi({\r\n  reducerPath: \"productsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3000/\" }),\r\n  endpoints: (builder) => ({\r\n    getAllProducts: builder.query({\r\n      query: () => `products`,\r\n    }),\r\n  }),\r\n});\r\n\r\n// Export hooks for usage in functional components, which are\r\n// auto-generated based on the defined endpoints\r\nexport const { useGetAllProductsQuery } = productsApi;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;AACA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAyB,CAAC,CAAC;EAChEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,cAAc,EAAED,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAEA,CAAA,KAAO;IAChB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAM;EAAEC;AAAuB,CAAC,GAAGR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}