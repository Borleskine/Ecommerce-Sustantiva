{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { url } from \"./api\";\n\n// Define a service using a base URL and expected endpoints\nexport const productsApi = createApi({\n  reducerPath: \"productsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${url}`\n  }),\n  endpoints: builder => ({\n    getAllProducts: builder.query({\n      query: () => `products`\n    })\n  })\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetAllProductsQuery\n} = productsApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","url","productsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getAllProducts","query","useGetAllProductsQuery"],"sources":["D:/Escritorio/api-ecommerce-sustantiva/frontend/src/features/productsApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { url } from \"./api\";\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const productsApi = createApi({\r\n    reducerPath: \"productsApi\",\r\n    baseQuery: fetchBaseQuery({ baseUrl: `${url}` }),\r\n    endpoints: (builder) => ({\r\n      getAllProducts: builder.query({\r\n        query: () => `products`,\r\n      }),\r\n    }),\r\n  });\r\n  \r\n  // Export hooks for usage in functional components, which are\r\n  // auto-generated based on the defined endpoints\r\n  export const { useGetAllProductsQuery } = productsApi;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACxE,SAASC,GAAG,QAAQ,OAAO;;AAE3B;AACA,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAAC;EACjCI,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAEJ,cAAc,CAAC;IAAEK,OAAO,EAAG,GAAEJ,GAAI;EAAE,CAAC,CAAC;EAChDK,SAAS,EAAGC,OAAO,KAAM;IACvBC,cAAc,EAAED,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAEA,CAAA,KAAO;IAChB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAM;EAAEC;AAAuB,CAAC,GAAGR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}